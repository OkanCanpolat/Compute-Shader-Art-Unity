#pragma kernel CSMain

RWTexture2D<float4> Result;
float2 Resolution;
float Time;

float3 palette(in float t)
{
    float3 a = float3(0.5, 0.5, 0.5);
    float3 b = float3(0.5, 0.5, 0.5);
    float3 c = float3(2.0, 1.0, 0.0);
    float3 d = float3(0.50, 0.20, 0.25);
    
    return a + b * cos(6.28318 * (c * t + d));
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float2 uv = (float2) id.xy / Resolution.xy * 2.0 - 1.0;
    float2 uv0 = uv;
    float3 finalColor = float3(0, 0, 0);
    
    for (int i = 0; i < 4; i++)
    {
        uv.x *= Resolution.x / Resolution.y;
        uv.y *= Resolution.x / Resolution.y;
        
        uv = frac(uv * 1.846465) - 0.5;
    
        float le = length(uv) * exp(-length(uv0));
    
        float3 color = palette(length(uv0) + Time * 0.4755 + i * 0.51656);
    
        le = sin(le * 6. + Time) / 6.;
        le = abs(le);
    
        le = pow(0.01 / le , 1.2);
    
        finalColor += color *= le;
    }
    
    Result[id.xy] = float4(finalColor, 1);
}



